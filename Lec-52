
# def decorator_function(any_function):
#     def wrapper_function(*args,**kwargs):
#         """ This is Wrapper function """
#         print("this is awesoem")
#         return any_function(*args,**kwargs)
#     return wrapper_function
#
# @decorator_function
# def add(a,b):
#     """ This is add Function """
#     return a + b
#
# print(add.__doc__) #  This is Wrapper function
# # here we are printing doc string of add function but
# # docstring is printing of wrapper function
# # this is happening because indirectly we are calling wrapper function
# print(add.__name__) # wrapper_function


# to solve this we have to import some module

from functools import wraps

def decorator_function(any_function):
    @wraps(any_function)
    def wrapper_function(*args,**kwargs):
        """ This is Wrapper function """
        print("this is awesome")
        return any_function(*args,**kwargs)
    return wrapper_function

@decorator_function
def add(a,b):
    """ This is add Function """
    return a + b


print(add.__doc__) # This is add Function
print(add.__name__) # add
